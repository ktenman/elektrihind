image: docker:24.0.7

services:
  - name: docker:24.0.7-dind
    alias: docker

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: $CI_REGISTRY_IMAGE/maven-jdk-21:latest
  # DOCKER_HOST is not needed if using the default unix socket
  DOCKER_TLS_CERTDIR: ""  # Disabling TLS for simplicity, be aware of security implications in a production environment

stages:
  - diagnostics
  - build_image
  - build
  - test
  - deploy

diagnostics:
  stage: diagnostics
  script:
    - echo "Checking Docker version..."
    - docker --version || true
    - echo "Checking which Docker..."
    - which docker || true
    - echo "Checking PATH..."
    - echo $PATH
    - echo "Checking user permissions..."
    - id
    - echo "Checking if Docker service is up..."
    - ps aux | grep docker || true

build_image:
  stage: build_image
  before_script:
    - echo "Waiting for Docker to start..."
    - sleep 10
    - echo "Logging into GitLab Registry..."
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - echo "Building the Docker image..."
    - docker build --pull -t "$IMAGE_TAG" .
    - echo "Pushing the image to the registry..."
    - docker push "$IMAGE_TAG"

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - .m2/repository

build:
  stage: build
  image: "$IMAGE_TAG"
  script:
    - echo "Compiling the project..."
    - mvn compile
    - echo "Listing contents of the Maven repository to ensure it's populated..."
    - ls -la ~/.m2/repository/ || true

test:
  stage: test
  image: "$IMAGE_TAG"
  script:
    - echo "Running tests..."
    - mvn test

deploy:
  stage: deploy
  image: debian:stable-slim  # Use the Debian slim image for a lightweight base.
  script:
    - apt-get update
    - apt-get install -y docker.io  # Install Docker
    - echo "Stopping and removing the existing container, if it exists..."
    - docker rm -f elektrihind-app-container || true  # You can remove this line since you won't be using Docker.
    - echo "Building the new Docker image without cache..."
    - docker build --no-cache -t elektrihind-app .
    - docker run -d -p 8080:8080 --restart always --name elektrihind-app-container elektrihind-app
    - echo "Removing dangling Docker images to free up space..."
    - docker rmi $(docker images -f "dangling=true" -q) || true
  only:
    - main
  tags:
    - production

