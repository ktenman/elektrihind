version: '3.8'
services:
  elektrihind-app:
    container_name: elektrihind_main
    image: ktenman/elektrihind:latest
    ports:
      - "8080:8080"
    environment:
      - TELEGRAM_ELEKTRITEEMU_TOKEN=${TELEGRAM_ELEKTRITEEMU_TOKEN}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - OMDB_API_KEY=${OMDB_API_KEY}
      - TWO_CAPTCHA_API_KEY=${TWO_CAPTCHA_API_KEY}
      - DIGITAL_OCEAN_API_TOKEN=${DIGITAL_OCEAN_API_TOKEN}
      - SCRAPENINJA_API_KEY=${SCRAPENINJA_API_KEY}
      - VISION_BASE64_ENCODED_KEY=${VISION_BASE64_ENCODED_KEY}
      - OPENAI_API_TOKEN=${OPENAI_API_TOKEN}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - APOLLO_KINO_USERNAME=${APOLLO_KINO_USERNAME}
      - APOLLO_KINO_PASSWORD=${APOLLO_KINO_PASSWORD}
      - APOLLO_KINO_USERNAME_PASSWORD_PAIRS=${APOLLO_KINO_USERNAME_PASSWORD_PAIRS}
    volumes:
      - cache-volume:/app/cache
    restart: always
    depends_on:
      - redis
      - rabbitmq
      - captcha-solver
      - automaks

  captcha-solver:
    container_name: captcha_solver_main
    image: ktenman/captcha-solver:latest
    ports:
      - "52525:52525"
    environment:
      - FLASK_ENV=development
    restart: always

  automaks:
    container_name: automaks_main
    image: ktenman/automaks:latest
    ports:
      - "52526:52526"
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://tenman.ee:52526/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.2.3-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "-a ${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    restart: always
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  cache-volume:
  redis-data:
  rabbitmq-data:

networks:
  mynetwork:
